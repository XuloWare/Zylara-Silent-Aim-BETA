

local players = game.Players
local lp = players.LocalPlayer
local rs = game:GetService("RunService")
local p = getgenv().Zylara
local m = lp:GetMouse()
local c = workspace.CurrentCamera
local SilentTarget, CamlockTarget = nil, nil
local CamToggle = false

local Circle = Drawing.new("Circle")
local Circle2 = Drawing.new("Circle")

getgenv().Zylara_Connections = {}

-- Update drawing circles for FOV
local renderSteppedConnection = rs.RenderStepped:Connect(function()
    Circle.Visible = p.SilentAim.FieldOfView.Visible
    Circle.Color = p.SilentAim.FieldOfView.Color
    Circle.Radius = p.SilentAim.FieldOfView.Radius
    Circle.Transparency = p.SilentAim.FieldOfView.Transparency
    Circle.Position = Vector2.new(m.X, m.Y + (game:GetService("GuiService"):GetGuiInset().Y))

    Circle2.Visible = p.Camlock.FieldOfView.Visible
    Circle2.Color = p.Camlock.FieldOfView.Color
    Circle2.Radius = p.Camlock.FieldOfView.Radius
    Circle2.Transparency = p.Camlock.FieldOfView.Transparency
    Circle2.Position = Vector2.new(m.X, m.Y + (game:GetService("GuiService"):GetGuiInset().Y))
end)

table.insert(getgenv().Zylara_Connections, renderSteppedConnection)

-- Check if the player is knocked out
local function Flags(Plr)
    if Plr and Plr.Character and p.KOCheck then
        local bodyEffects = Plr.Character:FindFirstChild("BodyEffects")
        if bodyEffects then
            local koValue = bodyEffects:FindFirstChild("K.O") or bodyEffects:FindFirstChild("KO")
            return koValue and koValue.Value
        end
    end
    return nil
end

-- Get the closest player within the Silent Aim field of view
local function GetClosestPlr()
    local closestTarget, maxDistance = nil, math.huge

    for _, player in pairs(players:GetPlayers()) do
        if player.Name ~= lp.Name and player.Character and player.Character:FindFirstChild("HumanoidRootPart") then
            local position, onScreen = c:WorldToScreenPoint(player.Character.HumanoidRootPart.Position)
            local distance = (Vector2.new(position.X, position.Y) - Vector2.new(m.X, m.Y)).Magnitude

            if onScreen and Circle.Radius > distance and distance < maxDistance then
                closestTarget, maxDistance = player, distance
            end
        end
    end
    return closestTarget
end

-- Get the closest player within the Camlock field of view
local function GetClosestPlr2()
    local closestTarget, maxDistance = nil, math.huge

    for _, player in pairs(players:GetPlayers()) do
        if player.Name ~= lp.Name and player.Character and player.Character:FindFirstChild("HumanoidRootPart") then
            local position, onScreen = c:WorldToScreenPoint(player.Character.HumanoidRootPart.Position)
            local distance = (Vector2.new(position.X, position.Y) - Vector2.new(m.X, m.Y)).Magnitude

            if onScreen and Circle2.Radius > distance and distance < maxDistance then
                closestTarget, maxDistance = player, distance
            end
        end
    end
    return closestTarget
end

-- Update Silent Aim target if enabled and not synced with Camlock
local renderSteppedSilentAimConnection = rs.RenderStepped:Connect(function()
    if p.SilentAim.Enabled and not p.SilentAim.SyncCamlock then
        SilentTarget = GetClosestPlr()
    end
end)

table.insert(getgenv().Zylara_Connections, renderSteppedSilentAimConnection)

-- Toggle Camlock and sync with Silent Aim if enabled
local inputBeganConnection = game:GetService("UserInputService").InputBegan:Connect(function(input, processed)
    if processed then return end

    if input.KeyCode == Enum.KeyCode[p.Camlock.Keybind] then
        CamToggle = not CamToggle

        if p.SilentAim.Enabled and p.SilentAim.SyncCamlock and p.Camlock.Enabled then
            if CamToggle then
                SilentTarget = GetClosestPlr()
                CamlockTarget = GetClosestPlr2()
            else
                SilentTarget, CamlockTarget = nil, nil
            end
        end
    end
end)

table.insert(getgenv().Zylara_Connections, inputBeganConnection)

-- Determine the correct event argument based on PlaceId
local function args()
    local placeId = game.PlaceId
    if placeId == 2788229376 or placeId == 16033173781 or placeId == 7213786345 then
        return "UpdateMousePosI"
    elseif placeId == 9825515356 then
        return "MousePosUpdate"
    else
        return "UpdateMousePos"
    end
end

-- Get the velocity of a player part
local function Velocity(Plr, Part)
    return Plr.Character[Part].Velocity
end

local OldPart = p.SilentAim.Part
-- Set up Silent Aim for tool activation
local function SilentMain(index)
    if index:IsA("Tool") then
        index.Activated:Connect(function()
            if SilentTarget and SilentTarget.Character and game.ReplicatedStorage:FindFirstChild("MainEvent") and not Flags(SilentTarget) then
                if p.SilentAim.EnableJumpPart then
                    if SilentTarget.Character[p.SilentAim.Part].Velocity.Y < -20 then
                        p.SilentAim.Part = p.SilentAim.JumpPart
                    else
                        p.SilentAim.Part = OldPart
                    end
                end

                local endPosition = SilentTarget.Character[p.SilentAim.Part].Position + Velocity(SilentTarget, p.SilentAim.Part) * p.SilentAim.Prediction
                game.ReplicatedStorage.MainEvent:FireServer(args(), endPosition)
            end
        end)
    end
end

local OldPart2 = p.Camlock.Part
-- Adjust the camera CFrame to aim at the Camlock target
local function Camlock()
    if CamlockTarget and CamlockTarget.Character and not Flags(CamlockTarget) then
        if p.Camlock.EnableJumpPart then
            if CamlockTarget.Character[p.Camlock.Part].Velocity.Y < -20 then
                p.Camlock.Part = p.Camlock.JumpPart
            else
                p.Camlock.Part = OldPart2
            end
        end

        local endPosition = CFrame.new(c.CFrame.Position, CamlockTarget.Character[p.Camlock.Part].Position + Velocity(CamlockTarget, p.Camlock.Part) * p.Camlock.Prediction)
        c.CFrame = c.CFrame:Lerp(endPosition, p.Camlock.Smoothness)
    end
end

local renderSteppedCamlockConnection = rs.RenderStepped:Connect(Camlock)

table.insert(getgenv().Zylara_Connections, renderSteppedCamlockConnection)

-- Connect Silent Aim to tools in newly added characters
local function onCharacterAdded(character)
    character.ChildAdded:Connect(SilentMain)
    for _, tool in pairs(character:GetChildren()) do
        SilentMain(tool)
    end
end

local characterAddedConnection = lp.CharacterAdded:Connect(onCharacterAdded)

table.insert(getgenv().Zylara_Connections, characterAddedConnection)

if lp.Character then
    onCharacterAdded(lp.Character)
end
